name: Android CI

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew assembleDebug # Use assembleDebug to build the debug APK

  unit_tests:
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job completing successfully

    steps:
    - uses: actions/checkout@v4
    - name: set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Run Unit Tests
      run: ./gradlew testDebugUnitTest # Runs all unit tests

  lint_check:
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job completing successfully

    steps:
    - uses: actions/checkout@v4
    - name: set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Run Lint Checks
      run: ./gradlew lintDebug # Runs lint checks for the debug build

  instrumented_tests:
    runs-on: ubuntu-latest
    needs: build # This job depends on the 'build' job completing successfully

    steps:
    - uses: actions/checkout@v4
    - name: set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        cache: gradle

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: AVD Caching
      uses: actions/cache@v4
      id: avd-cache
      with:
        path: ~/.android/avd/
        key: avd-30-${{ hashFiles('build.gradle') }} # Cache based on Gradle changes

    - name: Create AVD and start emulator
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 30 # Or the API level you want to test against
        target: google_apis # Or 'default' if you don't use Google Play Services
        arch: x86_64
        profile: Nexus 6
        force-avd-creation: ${{ !steps.avd-cache.outputs.cache-hit }} # Recreate AVD if cache missed
        emulator-boot-timeout: 300 # Increase timeout for slower emulators

    - name: Run Instrumented Tests
      run: ./gradlew connectedCheck # Runs instrumented tests on connected devices/emulators
